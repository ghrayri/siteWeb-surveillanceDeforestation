\chapter{\textbf{Interface web et visualisation cartographique}}
    %\addcontentsline{toc}{chapter}{Interface web et visualisation cartographique}

\section*{Introduction}

Ce projet de fin d'études présente le développement de GeoX, une application web innovante dédiée à la gestion, l'analyse et la visualisation de données géospatiales et environnementales. L'application s'appuie sur une architecture moderne full-stack, combinant un backend robuste basé sur Django et Django REST Framework (dossiers geoapp et geospatial_project) et un frontend interactif développé avec React (dossier frontend). GeoX permet aux administrateurs et utilisateurs de gérer efficacement les ressources géographiques, les images satellites et les indices environnementaux, tout en assurant une sécurité avancée grâce à un système d’authentification et d’autorisation. L'intégration de Leaflet pour la cartographie interactive et de Celery pour le traitement asynchrone garantit une expérience utilisateur fluide et des fonctionnalités avancées adaptées aux besoins réels du terrain. Ce chapitre détaille l’architecture technique, les modules principaux, ainsi que les fonctionnalités spécifiques développées dans le cadre de ce PFE.

\section{Architecture de l'application}
\subsection{Présentation générale des modules}
L'application GeoX est structurée autour de trois principaux dossiers :
\begin{itemize}
    \item \textbf{geoapp} : contient les modèles de données géospatiales (régions, points d'intérêt, couches de données, images satellites, etc.), la logique métier et l'administration Django. Ce module gère l'ensemble des entités spatiales et leurs relations, en s'appuyant sur PostgreSQL/PostGIS pour le stockage et la manipulation des géométries.
    \item \textbf{geospatial\_project} : regroupe la configuration globale du backend Django, l'intégration de Celery pour le traitement asynchrone (ex : calculs d'indices, import de données), la gestion des tâches périodiques et la sécurisation de l'accès à l'API.
    \item \textbf{frontend} : développé avec React, ce module propose une interface utilisateur moderne et réactive, intégrant Leaflet pour la visualisation cartographique, la gestion des couches, des régions, des points d'intérêt et des profils utilisateurs. Il communique avec l'API Django via des requêtes sécurisées.
\end{itemize}

\subsection{Outils et technologies utilisés}
\begin{table}[h!]
\centering
\begin{tabular}{|p{4cm}|p{10cm}|}
\hline
\textbf{Outil/Technologie} & \textbf{Rôle dans l'application} \\
\hline
Django & Backend, gestion des modèles, API REST, administration, sécurité \\
\hline
Django REST Framework & Création d’API sécurisées pour la communication frontend/backend \\
\hline
PostgreSQL/PostGIS & Base de données relationnelle et géospatiale \\
\hline
Celery + Redis & Traitement asynchrone des tâches lourdes (calculs, import, notifications) \\
\hline
React.js & Frontend, interface utilisateur dynamique et réactive \\
\hline
Leaflet.js & Cartographie interactive, affichage et édition des entités spatiales \\
\hline
Bootstrap & Design responsive et composants UI \\
\hline
\end{tabular}
\caption{Outils et technologies utilisés dans GeoX}
\end{table}
\newpage

\subsection{Exemple de modélisation (extrait du dossier geoapp)}
\begin{itemize}
    \item \textbf{Region} : nom, code, géométrie (MultiPolygon), population, surface, etc.
    \item \textbf{Point} : nom, région associée, localisation (Point), description, catégorie, etc.
    \item \textbf{DataLayer} : nom, description, fichier, type, auteur, etc.
    \item \textbf{Satellite} : gestion des images satellites et des indices environnementaux.
\end{itemize}

\subsection{Organisation du frontend}
Le dossier frontend contient l'ensemble du code React, avec des composants dédiés à la cartographie (Map, LayerControl, Draw), à la gestion des utilisateurs, à l'authentification, et à la navigation entre les différentes fonctionnalités (régions, analyses, POI, etc.). L'utilisation de React-Leaflet et de Bootstrap permet d'assurer une expérience utilisateur moderne et ergonomique.

\subsection{Modélisation UML de l'interface web et cartographique}
La figure \ref{fig:uml_interface} présente le diagramme UML des composants principaux de l'interface web et cartographique de GeoX. Cette modélisation met en évidence les relations entre les différents composants React et leur intégration avec les services d'API.


Cette architecture orientée composants permet une séparation claire des responsabilités :
\begin{itemize}
    \item Les composants cartographiques (MapContainer, LayersControl, GeoJSON, TileLayer) gèrent l'affichage et l'interaction avec les cartes via Leaflet.
    \item Les composants d'analyse (IndexAnalysisVisualizer, SatelliteImageViewer) permettent la visualisation des données satellitaires et des indices environnementaux.
    \item Les services API assurent la communication avec le backend Django pour récupérer et mettre à jour les données géospatiales.
\end{itemize}


\section{Conception de l’Interface d’Administration}
L’interface d’administration de la plateforme GeoX a été conçue pour offrir une gestion centralisée, efficace et sécurisée des différents composants du système, incluant les utilisateurs, les données géospatiales et les processus asynchrones. Basée sur le framework Django Admin, cette interface permet aux administrateurs de piloter l’ensemble de la plateforme de manière intuitive et modulaire.

Les figures \ref{interfaceadmin} et \ref{interfaceadminglobal} présentent respectivement l’interface de gestion des utilisateurs et la vue d’ensemble des différents modules administrables.

\begin{figure}[h!]
\centering
\includegraphics[width=0.8\linewidth]{Chapitre/interface_admin.png}
\caption{Tableau de bord d'administration Django listant les utilisateurs et leurs statuts}
\label{interfaceadmin}
\end{figure}

\begin{figure}[h!]
\centering
\includegraphics[width=0.8\linewidth]{Chapitre/interface_admin-glob.png}
\caption{Vue d'ensemble des modules administrables (utilisateurs, données géo, tâches périodiques)}
\label{interfaceadminglobal}
\end{figure}

\newpage

\subsection{Structure Modulaire}
L’interface est structurée en modules indépendants, chacun correspondant à une entité fonctionnelle de la plateforme. Cette modularité facilite la maintenance, l’extensibilité, et le contrôle granulaire des accès.

\begin{itemize}
\item \textbf{Authentication and Authorization} : permet la gestion des utilisateurs, des groupes, et des permissions. Chaque utilisateur est associé à un ensemble de droits définis par son appartenance à un ou plusieurs groupes.

\item \textbf{Celery Results} : module de monitoring des tâches asynchrones. Il affiche en temps réel l’état d’exécution des processus lancés en arrière-plan via Celery (ex. : traitement d’images, calculs analytiques).

\item \textbf{GeoApp} : regroupe l’ensemble des fonctionnalités liées à la gestion des données géospatiales :
\begin{itemize}
\item \textit{Data Layers} : gestion des couches cartographiques (raster ou vecteur).
\item \textit{Index Analysis} : consultation et configuration des résultats d’analyses d’indices environnementaux (NDVI, NDWI, etc.).
\item \textit{Points of Interest (POI)} : gestion des points d’intérêt géolocalisés .
\item \textit{Regions} : délimitation et gestion des zones d’analyse (régions géographiques d’étude).
\item \textit{Satellite Images} : accès aux images satellites utilisées dans les traitements.
\end{itemize}
\end{itemize}

\subsection{Fonctionnalités Avancées}
L’interface d’administration intègre plusieurs fonctionnalités avancées destinées à optimiser l’expérience de gestion :


\ding{226}  \textbf{Filtrage dynamique} : chaque module dispose d’outils de filtrage contextuel permettant d’effectuer des recherches multicritèmes (par date, utilisateur, type de donnée, etc.). Cela facilite grandement la navigation dans les bases de données volumineuses.

\ding{226}  \textbf{Gestion CRUD complète} : chaque entité peut être créée, modifiée ou supprimée directement via l’interface, sans recourir à des scripts ou accès en base. Cette gestion est sécurisée par des contrôles de permission.

\ding{226} \textbf{Visualisation détaillée des statuts utilisateurs} :\\

 Les informations principales (nom, email, dernier accès, statut) sont affichées dans des tableaux interactifs.\\
 
 Les statuts "\textit{is\_active}", "\textit{is\_staff}" et "\textit{is\_superuser}" sont clairement indiqués avec des étiquettes visuelles.\\
 
 Un code couleur et des icônes permettent de distinguer rapidement les niveaux de privilèges (ex. : utilisateurs classiques, administrateurs, superutilisateurs).
 Des filtres permettent d’afficher uniquement certains types de comptes (ex. : staff uniquement).\\
 
 L’interface permet aussi de modifier les droits d’un utilisateur en quelques clics, ou de l’assigner à des groupes prédéfinis avec des permissions spécifiques.

\section{Gestion des Données Géospatiales}
\subsection{Couches de Données}
L’interface présentée en figure \ref{enterlabel} illustre la gestion centralisée des couches de données géospatiales, avec notamment :\\

\textbullet Filtrage par type de fichier, permettant par exemple de n’afficher que les couches au format Parquet.\\

\textbullet Tri selon différents critères, tels que le créateur de la couche ou la date de création.\\

\textbullet Vue tabulaire détaillée affichant les métadonnées associées à chaque couche (nom, format, date, auteur, etc.), facilitant la recherche et la vérification des contenus.\\

\begin{figure}[h!]
\centering
\includegraphics[width=0.7\linewidth]{Chapitre/data_layer.png}
\caption{Gestion des couches de données géospatiales (format Parquet) et filtres par type ou créateur}
\label{enterlabel}
\end{figure}

\newpage

\subsection{Points d’Intérêt}
\ding{226} La figure \ref{pointadmin} présente la gestion des points d’intérêt (POI – Points of Interest), avec les fonctionnalités suivantes :\\

\textbullet Attribution précise des points à des régions géographiques spécifiques, assurant une organisation cohérente des données spatiales.\\

\textbullet Localisation géographique détaillée grâce à la visualisation directe sur carte.\\

\textbullet Historique des modifications conservé automatiquement, garantissant la traçabilité des interventions sur chaque entité.\\

\textbullet Intégration de la cartographie OpenStreetMap dans l’interface, offrant une meilleure lisibilité et une contextualisation visuelle des points.\\

\begin{figure}[h!]
\centering
\includegraphics[width=0.7\linewidth]{Chapitre/point_admin.png}
\caption{Gestion des points d'intérêt dans l'interface admin, avec localisation et attribution aux régions}
\label{pointadmin}
\end{figure}

\subsection{Régions Géographiques}
\ding{226} L’interface illustrée en figure \ref{fig:enter-label} montre la gestion des régions géographiques, avec notamment :\\

\textbullet Définition et modification des identifiants ou codes propres à chaque région (ex. : nom, code administratif, identifiant unique).\\

\textbullet Gestion des géométries associées à chaque région, incluant les polygones délimitant les zones d’étude.\\

\textbullet Visualisation dynamique sur carte interactive, facilitant la vérification et l’ajustement des limites régionales directement depuis l’interface.\\

\begin{figure}[h!]
\centering
\includegraphics[width=0.7\linewidth]{Chapitre/region_admin.png}
\caption{Interface d'administration des régions géographiques dans GeoX, avec gestion des géométries et filtres}
\label{fig:enter-label}
\end{figure}
\section{Interface Utilisateur et Authentification}
\subsection{Inscription et Vérification}

Les figures \ref{inscription} , \ref{emailverification} et \ref{emailverifie} illustrent le processus d’inscription :

\begin{figure}[h!]
    \centering
    \includegraphics[width=0.7\linewidth]{Chapitre/inscription.png}
    \caption{Formulaire d'inscription à la plateforme GeoX}
    \label{inscription}
\end{figure}

\begin{figure}[h!]
    \centering
    \includegraphics[width=0.6\linewidth]{Chapitre/email_verification.png}
    \caption{Confirmation d'envoi d'un email de vérification}
    \label{emailverification}
\end{figure}

\begin{figure}[h!]
    \centering
    \includegraphics[width=0.5\linewidth]{Chapitre/email_verifie.png}
    \caption{Email de vérification envoyé après l'inscription, contenant le lien d'activation du compte GeoX}
    \label{emailverifie}
\end{figure}

\subsection{Profil Utilisateur}
\ding{226} La figure \ref{profile} montre l’interface du profil utilisateur :\\

\textbullet Affichage clair des informations personnelles (prénom, nom, email).\\

\textbullet Navigation fluide entre les différentes fonctionnalités : régions, analyses, points d’intérêt, couches de données.\\

\begin{figure}[h!]
    \centering
    \includegraphics[width=0.5\linewidth]{Chapitre/profile.png}
    \caption{Interface utilisateur du profil GeoX}
    \label{profile}
\end{figure}

\section{Infrastructure Technique}
\subsection{Celery et Redis}
\ding{226} La figure \ref{celeryconnection} confirme la bonne intégration technique :

Connexion opérationnelle à Redis (localhost:6379).

Fonctionnement des workers Celery pour l’exécution asynchrone des tâches.

Suivi en temps réel des tâches dans l’interface d’administration.

\begin{figure}[h!]
    \centering
    \includegraphics[width=0.7\linewidth]{Chapitre/celery_connection.png}
    \caption{Logs de connexion de Celery à Redis}
    \label{celeryconnection}
\end{figure}

\section{Gestion des Images Satellites et des Indices Environnementaux}
La figure  illustre le mécanisme automatisé de mise à jour des images satellites et des indices calculés.

\begin{figure}[h!]
    \centering
    \includegraphics[width=0.6\linewidth]{Chapitre/remplir satellite.png}
    \caption{Exécution du script Python de mise à jour des images satellites et des indices environnementaux}
    \label{remplirsatellite}
\end{figure}

\subsection{ Mise à Jour des Images Satellites}
\textbullet Un script Python (remplirBDApplication.py) permet d’importer ou de mettre à jour les images dans la base.\\

\subsection{Calcul des Indices Environnementaux}


Les indices calculés sont essentiels pur l’analyse environnementale avancée. Le tableau suivant présente les principaux indices utilisés :

\begin{table}[h!]
\centering
\renewcommand{\arraystretch}{1.2} % Espace vertical entre les lignes
\begin{tabularx}{\textwidth}{|l|X|c|}
\hline
\textbf{Indice} & \textbf{Description}  \\
\hline
BSI (Bare Soil Index) & Indice de sol nu  \\
\hline
NBR (Normalized Burn Ratio) & Détection des zones brûlées  \\
\hline
NDBI (Normalized Difference Built-up Index) & Mesure de l’urbanisation  \\
\hline
NDMI (Normalized Difference Moisture Index) & Évaluation de l’humidité \\
\hline
NDVI (Normalized Difference Vegetation Index) & Indice de végétation  \\
\hline
\end{tabularx}
\caption{Indices environnementaux calculés à partir des images satellites}
\label{tab:indices_environnementaux}
\end{table}

Ces indices permettent la surveillance des sols, la détection des zones affectées par la déforestation, ainsi que l’étude de l’évolution urbaine.

\section{Gestion des Zones Utilisateurs}

La figure \ref{userzoneadmin}  illustre l'interface d'administration dédiée à la gestion des zones personnalisées attribuées aux utilisateurs.

\begin{figure}[h!]
    \centering
    \includegraphics[width=0.7\linewidth]{Chapitre/user_zone_admin.png}
    \caption{Administration des zones personnalisées par utilisateur, avec intégration cartographique}
    \label{userzoneadmin}
\end{figure}

\subsection{Fonctionnalités principales}

\begin{itemize}
    \item \textbf{Association utilisateur-zone} : chaque zone est liée à un utilisateur spécifique (exemple : \textit{chiraz}).
    \item \textbf{Gestion des géométries} : possibilité de définir des polygones ou zones d'intérêt personnalisées.
    \item \textbf{Suppression et modification} : édition ou suppression des zones existantes via l'interface.
\end{itemize}

\subsection{Intégration avec les modules géospatiaux}

\begin{itemize}
    \item \textbf{Liens avec les régions} : les zones utilisateurs peuvent être associées à des régions prédéfinies (exemple : \textit{nabeul}).
    \item \textbf{Visualisation cartographique} : intégration avec OpenStreetMap pour afficher dynamiquement les zones sur une carte interactive.
\end{itemize}

\section{Fonctionnalités avancées de visualisation cartographique}

L'interface web de GeoX intègre des fonctionnalités avancées de visualisation cartographique qui permettent aux utilisateurs d'explorer et d'analyser les données géospatiales de manière interactive et intuitive.

\subsection{Visualisation des indices environnementaux}

La plateforme offre une visualisation sophistiquée des indices environnementaux calculés à partir des images satellites, implémentée dans le composant IndexAnalysisVisualizer.

\begin{itemize}
    \item \textbf{Échelles de couleur adaptatives} : chaque indice (NDVI, NDWI, NDMI, NDBI, BSI) dispose d'une échelle de couleur spécifique optimisée pour son interprétation. Par exemple, pour le NDVI, l'échelle va du rouge (végétation faible ou absente) au vert foncé (végétation dense).
    
    \item \textbf{Superposition de couches} : l'utilisateur peut superposer différentes couches d'information (images satellites, indices, limites administratives) grâce au composant LayersControl de Leaflet.
    
    \item \textbf{Analyse temporelle} : possibilité de comparer les indices à différentes dates pour suivre l'évolution des phénomènes environnementaux (déforestation, urbanisation, sécheresse).
\end{itemize}

\subsection{Analyse de déforestation}

Le composant DeforestationAnalysis offre des fonctionnalités spécifiques pour la détection et le suivi des zones de déforestation.

\begin{itemize}
    \item \textbf{Comparaison temporelle} : l'interface permet de sélectionner deux périodes distinctes et de comparer visuellement l'évolution de la couverture végétale.
    
    \item \textbf{Calcul de différence} : le système calcule automatiquement la différence entre les indices NDVI de deux périodes pour mettre en évidence les zones de changement.
    
    \item \textbf{Statistiques de changement} : des statistiques détaillées sont générées pour quantifier l'ampleur des changements (surface affectée, pourcentage de perte de végétation).
\end{itemize}

\subsection{Visualisation des données en temps réel}

Le composant RealTimeVisualizer permet d'afficher et d'analyser les données provenant de capteurs IoT déployés sur le terrain.

\begin{itemize}
    \item \textbf{Graphiques dynamiques} : les données des capteurs sont présentées sous forme de graphiques interactifs qui se mettent à jour automatiquement.
    
    \item \textbf{Localisation spatiale} : les capteurs sont géolocalisés sur la carte, permettant de visualiser la distribution spatiale des mesures.
    
    \item \textbf{Alertes et seuils} : le système peut générer des alertes lorsque certains paramètres dépassent des seuils prédéfinis (température, humidité, pollution).
\end{itemize}

\subsection{Intégration avec les API satellitaires}

L'application s'intègre avec plusieurs API satellitaires pour l'acquisition et le traitement des images, notamment :

\begin{itemize}
    \item \textbf{Microsoft Planetary Computer} : permet d'accéder à des collections d'images Sentinel-2 et Landsat.
    
    \item \textbf{Sentinel Hub} : fournit un accès aux données Sentinel-1, Sentinel-2 et à d'autres sources d'imagerie satellitaire.
    
    \item \textbf{SentinelSat} : API Python utilisée pour interroger, télécharger et traiter les images Sentinel depuis le hub Copernicus.
\end{itemize}

Cette intégration est gérée par des utilitaires dédiés dans le module \texttt{utils.satellite\_utils}, qui offre des fonctions pour :

\begin{itemize}
    \item Rechercher des images par date, zone géographique et couverture nuageuse
    \item Télécharger et prétraiter les images (correction atmosphérique, géoréférencement)
    \item Calculer les indices environnementaux (NDVI, NDWI, NDMI, NDBI, BSI)
    \item Stocker les résultats dans la base de données PostgreSQL/PostGIS
\end{itemize}









